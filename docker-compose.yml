version: '3.8'

services:
  # Backend API
  backup-api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://backup_user:backup_password@postgres:5432/backup_db
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    volumes:
      - backup_storage:/app/backups
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Frontend
  backup-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backup-api
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:14
    environment:
      - POSTGRES_DB=backup_db
      - POSTGRES_USER=backup_user
      - POSTGRES_PASSWORD=backup_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis for job queuing
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Background task worker
  backup-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://backup_user:backup_password@postgres:5432/backup_db
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    volumes:
      - backup_storage:/app/backups
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    command: celery -A backup_worker worker --loglevel=info

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  backup_storage:
  minio_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: backup_network
